{"version":3,"file":"client.umd.js","sources":["../node_modules/url-join/lib/url-join.js","../client/index.js"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","const urljoin = require('url-join')\n\n// a client is required PER channel\n\nclass Client {\n\tconstructor({ path = '/sse', channel = 'hello' } = {}) {\n\t\tthis.events = new Map()\n\n\t\tconst fullPath = urljoin(path, channel)\n\n\t\tthis.eventSource = new EventSource(fullPath)\n\t\tthis.channel = channel\n\n\t\tthis.eventSource.addEventListener('open', this.onOpen.bind(this))\n\t\tthis.eventSource.addEventListener('error', this.onError.bind(this))\n\t\tthis.eventSource.addEventListener('close', this.onClose.bind(this))\n\t}\n\n\t//   get headers() {\n\t//     return {\n\t//       \"sse-key-e5b6a1db\": this.key,\n\t//     };\n\t//   }\n\n\t// addSSEHeadersToAxiosClient(axiosInstance) {\n\t// \taxiosInstance.interceptors.request.use(config => {\n\t// \t\tconfig.headers['sse-key'] = this.key\n\t// \t\treturn config\n\t// \t})\n\t// }\n\n\tonOpen(event) {\n\t\t// console.log('onOpen')\n\t}\n\n\tonError(event) {\n\t\t// console.log('client onError called')\n\t}\n\n\tonClose(event) {\n\t\t//   console.log('onClose')\n\t\tthis.eventSource.close()\n\t\tthis.eventSource = null\n\t}\n\n\taddEventListener(eventName, _callback) {\n\t\t// this assumes a single listener for each event\n\n\t\tconst callback = (event) => {\n\t\t\tconst type = event.type\n\t\t\tconst data = JSON.parse(event.data)\n\n\t\t\t_callback({\n\t\t\t\ttype,\n\t\t\t\tdata,\n\t\t\t})\n\t\t}\n\n\t\tthis.removeEventListener(eventName)\n\t\tthis.events.set(eventName, callback)\n\t\tthis.eventSource.addEventListener(eventName, callback)\n\t}\n\n\tremoveEventListener(eventName) {\n\t\tconst callback = this.events.get(eventName)\n\n\t\tif (callback) {\n\t\t\tthis.events.delete(eventName)\n\t\t\tthis.eventSource.removeEventListener(eventName, callback)\n\t\t}\n\t}\n}\n\nmodule.exports = Client\n"],"names":["context","definition","this","normalize","strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","_typeof","arguments","slice","call","module","exports","urljoin","require$$0","Client","path","channel","events","Map","fullPath","eventSource","EventSource","addEventListener","onOpen","bind","onError","onClose","event","close","eventName","_callback","callback","type","data","JSON","parse","removeEventListener","set","get","client"],"mappings":"g5DAAiBA,EAASC,EAATD,EAIHE,EAJYD,EAIN,oBAETE,EAAWC,OACdC,EAAc,MACM,IAApBD,EAASE,aAAuB,MAET,iBAAhBF,EAAS,SACZ,IAAIG,UAAU,kCAAoCH,EAAS,OAI/DA,EAAS,GAAGI,MAAM,iBAAmBJ,EAASE,OAAS,EAAG,KACxDG,EAAQL,EAASM,QACrBN,EAAS,GAAKK,EAAQL,EAAS,GAI7BA,EAAS,GAAGI,MAAM,gBACpBJ,EAAS,GAAKA,EAAS,GAAGO,QAAQ,gBAAiB,UAEnDP,EAAS,GAAKA,EAAS,GAAGO,QAAQ,gBAAiB,aAGhD,IAAIC,EAAI,EAAGA,EAAIR,EAASE,OAAQM,IAAK,KACpCC,EAAYT,EAASQ,MAEA,iBAAdC,QACH,IAAIN,UAAU,kCAAoCM,GAGxC,KAAdA,IAEAD,EAAI,IAENC,EAAYA,EAAUF,QAAQ,SAAU,KAIxCE,EAFED,EAAIR,EAASE,OAAS,EAEZO,EAAUF,QAAQ,SAAU,IAG5BE,EAAUF,QAAQ,SAAU,KAG1CN,EAAYS,KAAKD,QAIfE,EAAMV,EAAYW,KAAK,KAOvBC,GAHJF,EAAMA,EAAIJ,QAAQ,kBAAmB,OAGrBO,MAAM,YACtBH,EAAME,EAAMP,SAAWO,EAAMX,OAAS,EAAI,IAAK,IAAMW,EAAMD,KAAK,YAK3D,kBASEb,EANqB,WAAxBgB,EAAOC,UAAU,IACXA,UAAU,GAEV,GAAGC,MAAMC,KAAKF,cAtEWG,EAAOC,QAASD,UAAiBtB,IAEjED,EAAO,QAASC,QCHvB,IAAMwB,EAAUC,UAIVC,uFAC8C,OAArCC,KAAAA,aAAO,aAAQC,QAAAA,aAAU,yBACjCC,OAAS,IAAIC,QAEZC,EAAWP,EAAQG,EAAMC,QAE1BI,YAAc,IAAIC,YAAYF,QAC9BH,QAAUA,OAEVI,YAAYE,iBAAiB,OAAQjC,KAAKkC,OAAOC,KAAKnC,YACtD+B,YAAYE,iBAAiB,QAASjC,KAAKoC,QAAQD,KAAKnC,YACxD+B,YAAYE,iBAAiB,QAASjC,KAAKqC,QAAQF,KAAKnC,oDAgB9D,SAAOsC,2BAIP,SAAQA,2BAIR,SAAQA,QAEFP,YAAYQ,aACZR,YAAc,qCAGpB,SAAiBS,EAAWC,OAGrBC,EAAW,SAACJ,OACXK,EAAOL,EAAMK,KACbC,EAAOC,KAAKC,MAAMR,EAAMM,MAE9BH,EAAU,CACTE,KAAAA,EACAC,KAAAA,UAIGG,oBAAoBP,QACpBZ,OAAOoB,IAAIR,EAAWE,QACtBX,YAAYE,iBAAiBO,EAAWE,sCAG9C,SAAoBF,OACbE,EAAW1C,KAAK4B,OAAOqB,IAAIT,GAE7BE,SACEd,cAAcY,QACdT,YAAYgB,oBAAoBP,EAAWE,yCAKnDQ,EAAiBzB"}